char *home;
char *cwd;
char *displayCWD;
char* username;
char* hostname;
char* token[100];
char* arrc[1000];
char* eachcommand[1000];
char* eachpipe[1000];
char* pipedcommand[1000];
char* inp;
char arr[1000];
char* tok;
char* prevdir;
char* input_file;
char* output_file;
char* append_file;
int input_flag;
int output_flag;
int append_flag;
int bg_flag;
int bg_count;
int shell_pid;
char* forename;
int child_pid;
void jobsset();
void print_prompt();
void check_redirect(int no_arg);
int check_user(int no_arg);
void convertCWD(char* cwd);
int nocommands(char** command);
int getArgs1(char** command,int command_no);
int getArgs2(int command_no);
int getArgs3(int command_no);
void builtin();
int check_builtin();
int check_pipe(int no_arg);
void do_pipe(char** command,int command_no);
void changedir(char* dir);
int check_ls(int noarg);
void do_ls(int noarg,int aflag);
void dols_l(int noarg,int aflag);
void print_all(struct stat st);
void foreback(int noarg);
int check_pinfo(int noarg);
void dopinfo(int noarg);
void clock1(char* timediffer,char* duration);
int check_clock(int noarg);
int check_remindme(int noarg);
void remindme(char* timediffer,char* statement,int noarg);
void ctrlc(int sig);
void ctrlz(int sig);
